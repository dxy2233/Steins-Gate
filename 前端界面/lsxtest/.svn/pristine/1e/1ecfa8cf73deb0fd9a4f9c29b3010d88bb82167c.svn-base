<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/9/15
 * Time: 9:00
 */
namespace app\modules\category\controllers;

use app\modules\index\filters\PermissionFilter;
use yii\web\Controller;
use common\models\Category;
use common\web\Upload;

class CategoryController extends Controller{

    public $layout = false;

    public function __construct ($id, $module, $config = [])
    {
        $module = \Yii::$app->getModule('category');
        parent::__construct($id, $module, $config);
    }
    public function behaviors()
    {
        return [
            [
                'class' => PermissionFilter::className()
            ]
        ]; // TODO: Change the autogenerated stub
    }
    public function actionIndex()
    {
        $list = Category::getAllpage();
        $page=$list['page'];
        $data=$list['data'];
        return $this->render('index.tpl',array('data'=>$data,'page'=>$page));

    }

    public function actionAdd()
    {
        if(\Yii::$app->request->isPost){
            $data = \Yii::$app->request->post();
            $model = new Category();
            //上传文件
            $img = '';
            if($_FILES['category_path']['size']){
                $img = Upload::UploadPhoto($model,'uploads/category/','category_path');
                $img = str_replace('uploads/','',$img);
            }
            if(empty($data['category_id'])){
                //添加专题
                $model->category_name = $data['category_name'];
                $model->category_url = $data['category_url'];
                $model->category_path = $img;
                $model->category_sort = $data['category_sort'];
                $result = $model->insert(false);
            }else{
                $list = Category::getlist($data['category_id']);
                if(empty($list)){
                    return $this->goBack('index');
                }
                $data['category_path'] = $img ? $img : $list['category_path'];
                //修改专题
                $result = Category::Category_update($data['category_id'],$data);
            }
            return $this->goBack('index');
        }
        if(\Yii::$app->request->isGet){
            $list = \Yii::$app->request->get();
            if($list){
                $data['data'] = Category::getlist($list['id']);
                if(empty($data['data'])){
                    throw new UserException('专题不存在！');
                }
                return $this->render('add.tpl',$data);
            }
        }
        $data['data'] = array(
            'category_name'=>'',
            'category_path'=>'',
            'category_url'=>'',
            'category_sort'=>'',
            'category_id'=>'',
        );
        return $this->render('add.tpl',$data);
    }
    
    public function actionDel(){
        if(\Yii::$app->request->isGet){
            $list = \Yii::$app->request->get();
            if($list['id']){
                $id = Category::getlist($list['id']);
                if(empty($id)){
                    return $this->goBack('index');
                }
                $carousel = Category::Category_delete($list['id']);
                if($carousel){
                     return $this->goBack('index');
                }
            }
       }
    }

    public function actionCheckName ()
    {
        if(\Yii::$app->request->isAjax) {
            $response = \Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;
            $category_id = \Yii::$app->request->post('category_id');
            $category_name = \Yii::$app->request->post('category_name');
            if (empty($category_id))   //add
            {
                $res = Category::find()->where(array('category_name' => $category_name))->asArray()->one();
                if (!empty($res)) {
                    return [
                        'code' => 0,
                        'message' => '名称重复'
                    ];
                } else {
                    return [
                        'code' => 1,
                        'message' => '名称不重复'
                    ];
                }
            } else {       //update
                $res = Category::find()->where(array('category_name' => $category_name))->andWhere('category_id != ' . $category_id)->asArray()->one();
                if (!empty($res)) {
                    return [
                        'code' => 0,
                        'message' => '名称重复'
                    ];
                } else {
                    return [
                        'code' => 1,
                        'message' => '名称不重复'
                    ];
                }

            }
        }
    }
}