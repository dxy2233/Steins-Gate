<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/9/12
 * Time: 9:27
 */
namespace app\modules\index\controllers;

use app\modules\index\filters\PermissionFilter;
use common\models\Admin;
use yii\helpers\Url;
use yii\web\Controller;
use common\models\Menu;
use common\models\RoleAuth;
class IndexController extends Controller{

    public $layout = false;
    public $enableCsrfValidation=false;
    public function __construct ($id, $module, $config = [])
    {
        $module = \Yii::$app->getModule('index');
        parent::__construct($id, $module, $config);
    }
    public function behaviors()
    {
        return [
            [
                'class' => PermissionFilter::className()
            ]
        ]; // TODO: Change the autogenerated stub
    }

    public function actionIndex (){
        $cookie = \Yii::$app->request->cookies;
        $user_id = $cookie->getValue('user_id');

//        var_dump($user_id);die();
        $user_id = $user_id ? $user_id : 1;
        $data['data'] = Menu::getList();
        $data['list'] = Admin::getone($user_id);
//        $role_id =$data['list']['role_id'];
//        $arr=RoleAuth::getleftmenu($role_id);
//        var_dump($arr);die();

        return $this->render('index.tpl',$data);

//        var_dump(Url::to('/login/login/login',true));die();
//        $cookie = \Yii::$app->request->cookies;
//        $cook['admin_name']=$cookie->getValue('admin_name');
//        $cook['ip']=$cookie->getValue('ip');
//        $cook['last_time']=$cookie->getValue('last_time');
//        return $this->render('index.tpl',['cook'=>$cook]);


    }

    public function actionUpdteadmin(){
        if (\Yii::$app->request->isPost) {
            $post = \Yii::$app->request->post();
            $model = new Admin();
            if(empty($post['user_id'])){
                return $this->goBack('index');
            }else{
                $list = Admin::getone($post['user_id']);
                if(empty($list)){
                    return $this->goBack('index');
                }
                $post['user_name'] = $list['user_name'];
                $post['status'] = $list['status'];
                $post['role_id'] = $list['role_id'];
                $result = Admin::Admin_update($post['user_id'],$post);
            }
        }
        $cookie = \Yii::$app->request->cookies;
        $user_id = $cookie->getValue('user_id');
        $user_id = $user_id ? $user_id : 1;
        $data['list'] = Admin::getone($user_id);
        $data['role'] = '';
        if($data['list']['role_id']){
            $list = RoleAuth::getleftmenu($data['list']['role_id']);
            foreach($list as $val){
                $data['role'] = $val['menu_name'].',';
            }
            $data['role'] = rtrim($data['role'],',');
        }
        return $this->render('update.tpl',$data);
    }
    public function actionUpdatepassword(){
        if (\Yii::$app->request->isAjax) {
            $response = \Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;
            $post = \Yii::$app->request->post();
            $cookie = \Yii::$app->request->cookies;
            $user_id = $cookie->getValue('user_id');
            $user_id = $user_id ? $user_id : 1;
            $list = Admin::getone($user_id);

            if(!getpassword($post['password'],$list['password'])){
                return [
                'success'=>0,
                'list'=>'原始密码不对',
                ];
            }
            if($post['newpassword'] != $post['newpasswordtwo']){
                return [
                'success'=>0,
                'list'=>'二次密码不对',
                ];
            }
            $data = Admin::Updatepassword($user_id,setpassword($post['newpassword']));
            if($data){
                return [
                'success'=>1,
                'list'=>'修改成功',
                ];
            }
            
        }
    }
    public function actionLoginout()
    {
        $name = \Yii::$app->request->cookies->get('admin_name');
       \Yii::$app->response->getCookies()->remove($name);
//        var_dump($res);die();
        return $this->redirect('/login/login/login');
    }
}