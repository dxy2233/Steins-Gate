<?php
namespace app\modules\shop\models;
use common\models\Admin;
use common\models\Commission;
use common\models\Region;
use common\models\Shop;
use common\models\ShopAccount;
use common\models\ShopUser;
use common\models\UserOrder;
use yii\base\Exception;
use yii\base\Model;
use yii\db\Query;

/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/9/19
 * Time: 11:07
 */
class ShopDo extends Model
{
    public static function ShopList($post=null){
        $query=new Query();
        $query->select([
            's.*',
            'a.user_name'
        ]);
        $query->from([
            's' => Shop::tableName()
        ]);
        $query->leftJoin([
            'a' => Admin::tableName()
        ], 's.operator_id = a.user_id');
        //商铺名字
        if(!empty($post['shop_name']))
        {
            $query->andWhere([
                'like',
                's.shop_name',
                $post['shop_name']
            ]);
        }
        //店铺状态
        if(!empty($post['shop_status']))
        {
            $shop_status=$post['shop_status']-1;
            $query->andWhere([
                's.shop_status' => $shop_status
            ]);
        }
        //创建时间
        if(!empty($post['create_time_start']))
        {
            $create_time_start=strtotime($post['create_time_start']);
            $query->andwhere('s.create_time >= :create_time_begin', [
                ':create_time_begin' => $create_time_start
            ]);
        }
        if(!empty($post['create_time_end']))
        {
            $create_time_end=strtotime($post['create_time_end']);
            $query->andwhere('s.create_time <= :create_time_end', [
                ':create_time_end' => $create_time_end
            ]);
        }
        //地区检索
        if(!empty($post['region_code']))
        {
            $query->andWhere("s.region_code like :region_code", [
                ':region_code' => $post['region_code'] . '%'
            ]);
        }
        $data=page($query);
        return $data;
    }
    public static function ShopInfo($id=null)
    {
        $query=new Query();
        $query->select([
            's.*',
            'sa.foods',
            'sa.banquets',
            'sa.banquet_orders',
            'sa.sales_amount',
            'sa.total_balnce',
            'sa.platform_amount',
            'sa.withdraw_amount'
        ]);

        $query->from([
            's' => Shop::tableName()
        ]);
        $query->leftJoin([
            'sa' =>ShopAccount::tableName()
        ], 's.shop_id = sa.shop_id');
        $query->andWhere([
            's.shop_id' => $id
        ]);
        $data=$query->one();
        //商家用户数
        $total_user=UserOrder::find()->select('count(record_id) as total_user')->where('shop_id='.$id.' and order_status=3')->groupBy('user_id')->asArray()->one();
       $data['total_user']= $total_user['total_user'];
       //分佣比例
       $commission_rate=Commission::find()->select('commission_rate')->where('shop_id='.$id)->asArray()->one();
       $data['commission_rate']=$commission_rate['commission_rate'];
        return $data;

    }
    public static function ShopAdd($post=null)
    {
        $model=new Shop();
        $model->shop_name=$post['shop_name'];
        $model->merchant_name=$post['merchant_name'];
        $model->merchant_mobile=$post['merchant_mobile'];
        $model->merchant_area=$post['merchant_area'];
        $model->merchant_seats=$post['merchant_seats'];
        $model->merchant_telphone=$post['merchant_telphone'];
        $model->address=$post['address'];
        $model->shop_lng=$post['shop_lng'];
        $model->shop_lat=$post['shop_lat'];
        $model->create_time=time();
        //城市信息代码处理
        $region_code=Region::city($post);
        $model->region_code=$region_code;
        $model->shop_status=$post['shop_status'];
        $res=$model->save();
        $shop_id=$model->shop_id;
        //存账号
        $model=new ShopUser();
        $model->shop_id=$shop_id;
        $model->shop_user=$post['shop_user'];
        $model->password=setpassword($post['password']);
        $model->user_status=1;
        //获取管理员的ID
        $cookie = \Yii::$app->request->cookies;
        $user_id=$cookie->getValue('user_id');
        $model->operator_id=$user_id;
        $model->create_time=time();
        $res=$model->save();
        //创建商铺账户
        $model=new ShopAccount();
        $model->shop_id=$shop_id;
        $model->create_time=time();
        $model->save();
        //存分佣比例
        $model=new Commission();
        $model->shop_id=$shop_id;
        $model->commission_rate=$post['commission_rate'];
        $model->operator_id=1;
        $model->create_time=time();
        $model->save();

        return $res;


    }
    public static function ShopValidation($post=null)
    {
        $shop_user=$post['shop_user'];
        $res=ShopUser::ShopUser($shop_user);
        if(!empty($res))
        {
            throw new Exception('已存在该用户');
        }

    }
    public static function ShopEditInfo($shop_id)
    {
        $arr=Shop::find()->where(['shop_id'=>$shop_id])->asArray()->one();
        $commission_rate=Commission::GetCommissionRate($shop_id);
        $arr['commission_rate']=$commission_rate;
        $region_code=$arr['region_code'];
        $shop_user=ShopUser::find()->where(['shop_id'=>$shop_id])->asArray()->one();
        $arr['shop_user']=$shop_user['shop_user'];
        $post=Region::recity($region_code);
        $data['arr']=$arr;
        $data['post']=$post;
        return $data;

    }
    public static function ShopEdit($post)
    {
        $model=Shop::find()->where(['shop_id'=>$post['shop_id']])->one();
        $model->shop_name=$post['shop_name'];
        $model->merchant_name=$post['merchant_name'];
        $model->merchant_mobile=$post['merchant_mobile'];
        $model->merchant_area=$post['merchant_area'];
        $model->merchant_seats=$post['merchant_seats'];
        $model->merchant_telphone=$post['merchant_telphone'];
        $model->address=$post['address'];
        $model->shop_lng=$post['shop_lng'];
        $model->shop_lat=$post['shop_lat'];
        $model->update_time=time();
        //城市信息代码处理
        $region_code=Region::city($post);
        $model->region_code=$region_code;
        $model->shop_status=$post['shop_status'];
        //管理员储存
        $cookie = \Yii::$app->request->cookies;
        $user_id=$cookie->getValue('user_id');
        $model->operator_id=$user_id;
        $res=$model->update();
        //账号修改
        $model=ShopUser::find()->where(['shop_id'=>$post['shop_id']])->one();
        $model->shop_user=$post['shop_user'];
        $model->update_time=time();
        $res=$model->update();
        //判断分佣比例是否被修改
        $commission_rate=Commission::GetCommissionRate($post['shop_id']);
        if($commission_rate!==$post['commission_rate'])
        {
            //存分佣比例
            $model=new Commission();
            $model->shop_id=$post['shop_id'];
            $model->commission_rate=$post['commission_rate'];
            $model->operator_id=1;
            $model->create_time=time();
            $model->save();
        }
        return $res;

    }
    public static function RePassword($shop_id)
    {
        $model=ShopUser::find()->where(['shop_id'=>$shop_id])->one();
        $model->password=setpassword('123456');
        $res=$model->update();
        return $res;
    }
}