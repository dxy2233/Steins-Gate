<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/9/12
 * Time: 9:27
 *流水席订单管理
 */
namespace app\modules\order\controllers;


use common\models\BanquetOrder;
use common\models\UserOrder;
use common\models\User;
use common\models\ShopBanquet;
use common\models\Shop;
use common\models\BanquetMenu;
use common\models\BanquetOrderMenu;
use common\models\BanquetType;
use yii\db\Query;
use yii\web\Controller;

class OrderController extends \seller\controllers\InitController
    {
    //    return [
    //        'class' => IsLoginController::className()
    //    ]; // TODO: Change the autogenerated stub
    //}{
    //public function behaviors()
    //{
    //    return [
    //        'class' => IsLoginController::className()
    //    ]; // TODO: Change the autogenerated stub
    //}

    
    public $enableCsrfValidation = false;
    public $shop_usermsg;
    public function init ()
    {
        $session = \Yii::$app->session;
        $this->shop_usermsg = $session->get('seller_msg');
    }
    public function actionIndex (){
       //<img src="{imageurl($last.carousel_path)}">
       if(\Yii::$app->request->isAjax&&$this->shop_usermsg['shop_id']) 
        {
            $query = new Query();
            $query->select('bo.order_id,bo.banquet_id,,bo.total_peoples,sb.banquet_url,bo.type_id,bo.banquet_sn,bo.banquet_name,bo.banquet_title,bo.order_status,bo.order_amount,bo.banquet_time,bo.shop_id,bo.order_price,bt.type_name');
            $query->from(BanquetOrder::tableName() . ' bo');
            $query->leftJoin(BanquetType::tableName() . ' bt', 'bo.type_id = bt.type_id');
            $query->leftJoin(ShopBanquet::tableName() . ' sb', 'bo.banquet_id = sb.banquet_id');
            $query->where([
                'bo.shop_id' => $this->shop_usermsg['shop_id']
            ]);
            if($_POST['sta']!=99) {
                $query->andWhere([
                    'bo.order_status' => $_POST['sta']
                ]);
            }
            
            $page_first = $_POST['page']*10;
            $page_lase = $page_first+10;
            $query->limit($page_lase)->offset($page_first);
            $list_msg = $query->orderBy('bo.create_time desc')->groupBy('bo.banquet_sn')->all();
            if(is_array($list_msg)) {
                foreach ($list_msg as $key => $value) {
                    $list_msg[$key]['banquet_time'] = date('m-d H:i',$value['banquet_time']);
                    $list_msg[$key]['banquet_url'] = imageurl($value['banquet_url']);
                }
                
            }
            \Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;
             if ($list_msg) {
                $result=['status'=>1,'list_msg'=>$list_msg];
                
            }else{
                $result=['status'=>0];
            }
            return $result;
        }
        $params = [
            'a'=>[
                '1'=>1,
                '2'=>2
            ],
            'b'=>'2'
        ];
        return $this->render('index.tpl');
    }

    public function actionDetail (){
        if($_GET['order_id']&&$this->shop_usermsg) {
            $query = new Query();
            //订单状态（0拼席中，1拼席成功，2已退款，3已完成order_status，order_status）
            $query->select('bo.banquet_id,s.shop_name,bo.order_status,bo.total_peoples,bo.joined_peoples,bo.order_price,sb.banquet_name,sb.banquet_url,sb.banquet_number,bo.order_amount,bo.banquet_number,bo.banquet_title,bo.banquet_time,bo.banquet_sn,bo.order_id');
            $query->from(BanquetOrder::tableName() . ' bo');
            $query->leftJoin(ShopBanquet::tableName() . ' sb', 'sb.banquet_id = bo.banquet_id');
            $query->leftJoin(Shop::tableName() . ' s', 's.shop_id = bo.shop_id');
            //$query->leftJoin(UserOrder::tableName() . ' uo', 'bo.order_id = uo.order_id');
            //$query->leftJoin(User::tableName() . ' u', 'uo.user_id = u.user_id');
            $query->where([
                'bo.order_id' => $_GET['order_id'],
                'bo.shop_id' => $this->shop_usermsg['shop_id']
            ]);
            $list_msg = $query->one();
            // var_dump($list_msg);die();
            $user_list=array();
            if($list_msg['order_id']) {
                $user_order = new Query();
                //订单状态（0拼席中，1拼席成功，2已退款，3已完成order_status，order_status）
                $user_order->select('uo.record_sn,uo.pay_time,uo.buy_seats,uo.pay_amount,uo.order_status,uo.pay_status,u.nickname,u.user_name,u.image_path');
                $user_order->from(UserOrder::tableName() . ' uo');
                $user_order->leftJoin(User::tableName() . ' u', 'uo.user_id = u.user_id');
                $user_order->where([
                    'uo.order_id' => $list_msg['order_id'],
                    'uo.shop_id' => $this->shop_usermsg['shop_id']
                ]);
                $user_list = $user_order->all();
            }
        }
        // if (!$user_list)$user_list=array();
        $params['list_msg'] = $list_msg;
        $params['user_list'] = $user_list;
        return $this->render('detail.tpl',$params);
    }

    public function actionDetail_next (){
         if($this->shop_usermsg['shop_id']&&$_GET['banquet_id']) {
            $query = new Query();
            $query->select('sb.banquet_id,sb.banquet_status,sb.banquet_url,sb.banquet_name,sb.price,sb.total_peoples,sb.banquet_amount,sb.banquet_number,sb.begin_time,sb.end_time,bt.type_name,sb.type_id');
            $query->from(ShopBanquet::tableName() . ' sb');
            $query->leftJoin(BanquetType::tableName() . ' bt', 'sb.type_id = bt.type_id');

            $query->where([
                'sb.banquet_id' => $_GET['banquet_id'],
                'sb.shop_id' => $this->shop_usermsg['shop_id']
            ]);

            $list_msg = $query->one();
            $menu_list = BanquetOrderMenu::find()->where('shop_id='.$this->shop_usermsg['shop_id'].' and order_id='.$_GET['order_id'].'')->asArray()->all();
             
         }
        $params['list_msg'] = $list_msg;
        $params['menu_list'] = $menu_list;
        return $this->render('detail_next.tpl',$params);
    }

}