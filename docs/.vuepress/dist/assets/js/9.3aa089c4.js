(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{361:function(t,a,s){"use strict";s.r(a);var r=s(42),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"目录结构推荐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录结构推荐"}},[t._v("#")]),t._v(" 目录结构推荐")]),t._v(" "),s("h2",{attrs:{id:"目录结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[t._v("#")]),t._v(" 目录结构")]),t._v(" "),s("p",[t._v("一定使用go mod创建项目\n"),s("a",{attrs:{href:"https://github.com/golang-standards/project-layout/blob/master/README_zh.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"go目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#go目录"}},[t._v("#")]),t._v(" Go目录")]),t._v(" "),s("h3",{attrs:{id:"cmd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[t._v("#")]),t._v(" /cmd")]),t._v(" "),s("p",[t._v("项目主干，每个应用程序的目录名应该与你想要的可执行文件的名称相匹配(例如，/cmd/myapp)。")]),t._v(" "),s("p",[t._v("通常有一个小的 main 函数，从 /internal 和 /pkg 目录导入和调用代码，除此之外没有别的东西。")]),t._v(" "),s("h3",{attrs:{id:"internal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#internal"}},[t._v("#")]),t._v(" /internal")]),t._v(" "),s("p",[t._v("私有应用程序和库代码。这是你不希望其他人在其应用程序或库中导入代码。请注意，这个布局模式是由 Go 编译器本身执行的。有关更多细节，请参阅Go 1.4 release notes 。注意，你并不局限于顶级 internal 目录。在项目树的任何级别上都可以有多个内部目录。")]),t._v(" "),s("h3",{attrs:{id:"pkg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pkg"}},[t._v("#")]),t._v(" /pkg")]),t._v(" "),s("p",[t._v("外部应用程序可以使用的库代码(例如 /pkg/mypubliclib)。")]),t._v(" "),s("h3",{attrs:{id:"vendor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vendor"}},[t._v("#")]),t._v(" /vendor")]),t._v(" "),s("p",[t._v("应用程序依赖项(手动管理或使用你喜欢的依赖项管理工具，如新的内置 Go Modules 功能)。go mod vendor 命令将为你创建 /vendor 目录。请注意，如果未使用默认情况下处于启用状态的 Go 1.14，则可能需要在 go build 命令中添加 -mod=vendor 标志。")]),t._v(" "),s("p",[t._v("如果你正在构建一个库，那么不要提交你的应用程序依赖项。")]),t._v(" "),s("h2",{attrs:{id:"服用应用程序目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服用应用程序目录"}},[t._v("#")]),t._v(" 服用应用程序目录")]),t._v(" "),s("h3",{attrs:{id:"api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" /api")]),t._v(" "),s("p",[t._v("OpenAPI/Swagger 规范，JSON 模式文件，协议定义文件。")]),t._v(" "),s("h2",{attrs:{id:"web应用程序目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web应用程序目录"}},[t._v("#")]),t._v(" web应用程序目录")]),t._v(" "),s("h3",{attrs:{id:"web"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web"}},[t._v("#")]),t._v(" /web")]),t._v(" "),s("p",[t._v("特定于 Web 应用程序的组件:静态 Web 资产、服务器端模板和 SPAs。")]),t._v(" "),s("h2",{attrs:{id:"通用应用目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通用应用目录"}},[t._v("#")]),t._v(" 通用应用目录")]),t._v(" "),s("h3",{attrs:{id:"configs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configs"}},[t._v("#")]),t._v(" /configs")]),t._v(" "),s("p",[t._v("配置文件模板或默认配置。")]),t._v(" "),s("p",[t._v("将你的 confd 或 consul-template 模板文件放在这里。")]),t._v(" "),s("h3",{attrs:{id:"init"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#init"}},[t._v("#")]),t._v(" /init")]),t._v(" "),s("p",[t._v("System init（systemd，upstart，sysv）和 process manager/supervisor（runit，supervisor）配置。")]),t._v(" "),s("h3",{attrs:{id:"scripts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scripts"}},[t._v("#")]),t._v(" /scripts")]),t._v(" "),s("p",[t._v("执行各种构建、安装、分析等操作的脚本。")]),t._v(" "),s("h3",{attrs:{id:"build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[t._v("#")]),t._v(" /build")]),t._v(" "),s("p",[t._v("打包和持续集成。")]),t._v(" "),s("p",[t._v("将你的云( AMI )、容器( Docker )、操作系统( deb、rpm、pkg )包配置和脚本放在 /build/package 目录下。")]),t._v(" "),s("p",[t._v("将你的 CI (travis、circle、drone)配置和脚本放在 /build/ci 目录中。请注意，有些 CI 工具(例如 Travis CI)对配置文件的位置非常挑剔。尝试将配置文件放在 /build/ci 目录中，将它们链接到 CI 工具期望它们的位置(如果可能的话)。")]),t._v(" "),s("h3",{attrs:{id:"deployments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deployments"}},[t._v("#")]),t._v(" /deployments")]),t._v(" "),s("p",[t._v("IaaS、PaaS、系统和容器编配部署配置和模板(docker-compose、kubernetes/helm、mesos、terraform、bosh)。注意，在一些存储库中(特别是使用 kubernetes 部署的应用程序)，这个目录被称为 /deploy。")]),t._v(" "),s("h3",{attrs:{id:"test"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#test"}},[t._v("#")]),t._v(" /test")]),t._v(" "),s("p",[t._v("额外的外部测试应用程序和测试数据。你可以随时根据需求构造 /test 目录。对于较大的项目，有一个数据子目录是有意义的。例如，你可以使用 /test/data 或 /test/testdata (如果你需要忽略目录中的内容)。请注意，Go 还会忽略以“.”或“_”开头的目录或文件，因此在如何命名测试数据目录方面有更大的灵活性。")]),t._v(" "),s("h2",{attrs:{id:"其它目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其它目录"}},[t._v("#")]),t._v(" 其它目录")]),t._v(" "),s("h3",{attrs:{id:"docs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docs"}},[t._v("#")]),t._v(" /docs")]),t._v(" "),s("p",[t._v("设计和用户文档(除了 godoc 生成的文档之外)。")]),t._v(" "),s("h3",{attrs:{id:"tools"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tools"}},[t._v("#")]),t._v(" /tools")]),t._v(" "),s("p",[t._v("这个项目的支持工具。注意，这些工具可以从 /pkg 和 /internal 目录导入代码。")]),t._v(" "),s("h3",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" /examples")]),t._v(" "),s("p",[t._v("你的应用程序和/或公共库的示例。")]),t._v(" "),s("h3",{attrs:{id:"third-party"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#third-party"}},[t._v("#")]),t._v(" /third_party")]),t._v(" "),s("p",[t._v("外部辅助工具，分叉代码和其他第三方工具(例如 Swagger UI)。")]),t._v(" "),s("h3",{attrs:{id:"assets"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assets"}},[t._v("#")]),t._v(" /assets")]),t._v(" "),s("p",[t._v("与存储库一起使用的其他资产(图像、徽标等)。")]),t._v(" "),s("h3",{attrs:{id:"website"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#website"}},[t._v("#")]),t._v(" /website")]),t._v(" "),s("p",[t._v("如果你不使用 Github 页面，则在这里放置项目的网站数据。")])])}),[],!1,null,null,null);a.default=e.exports}}]);